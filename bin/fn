#!/bin/bash

# function library for qyc

mk_wp() {
    if [[ "$1" == *"."* ]]; then
        domain="$1"
        [[ "$1" == www.* ]] && domain=$(echo "$1" | cut -c 5-)
        [[ -d /var/www/$domain ]] && printf "\nWP site already exists." && exit
        shift
    else
        printf "\nInvalid domain: $1"
        print_help_wp
        exit
    fi

    while [[ "$#" -gt 0 ]]; do
        case "$1" in
            -o|option)
                option="$2"
                shift
                ;;
            length)
                length="$2"
                shift
                ;;
            *)
                printf "\nInvalid option: $1"
                print_help_wp
                ;;
        esac
        shift
    done

    local dbpassword=$(sudo openssl rand -base64 16)
    #local qycpw=$(grep "MariaDB qyc" /etc/qycli/qycli.cnf | sed 's/^.*: //') # Reading the qycli.cnf file
    local dbnaming="qyc_$(echo ${domain} | sed "s+[^0-9A-Za-z]+_+g")"
	sudo runuser -u mysql -- mysql --user=mysql <<EOF
CREATE USER ${dbnaming}@localhost IDENTIFIED BY '${dbpassword}';
CREATE DATABASE ${dbnaming};
GRANT ALL PRIVILEGES ON ${dbnaming}.* TO ${dbnaming}@localhost;
FLUSH PRIVILEGES;
EOF

    sudo mkdir -p /var/www/$domain/htdocs
    sudo wget -qrO /var/www/$domain/htdocs/latest.tar.gz https://wordpress.org/latest.tar.gz
    sudo tar -xf /var/www/$domain/htdocs/latest.tar.gz -C /var/www/$domain/
	sudo mv /var/www/$domain/wordpress/* /var/www/$domain/htdocs/
	sudo rm -rf /var/www/$domain/wordpress
	sudo rm /var/www/$domain/htdocs/latest.tar.gz

    sudo cp /var/www/$domain/htdocs/wp-config-sample.php /var/www/$domain/wp-config.php
    sudo chown www-data:www-data -R /var/www/$domain/*
    sudo sed -i "s+'DB_NAME', 'database_name_here'+'DB_NAME', '${dbnaming}'+g" /var/www/$domain/wp-config.php
    sudo sed -i "s+'DB_USER', 'username_here'+'DB_USER', '${dbnaming}'+g" /var/www/$domain/wp-config.php
    sudo sed -i "s+'DB_PASSWORD', 'password_here'+'DB_PASSWORD', '${dbpassword}'+g" /var/www/$domain/wp-config.php
    sudo sed -i "s+'DB_HOST', 'localhost'+'DB_HOST', ':/run/mysqld/mysqld.sock'+g" /var/www/$domain/wp-config.php
    #wp --path=/var/www/$domain/htdocs config shuffle-salts
    sudo sed -i "s#'AUTH_KEY',         'put your unique phrase here'#'AUTH_KEY',         '$(sudo openssl rand -base64 48)'#g" /var/www/$domain/wp-config.php
    sudo sed -i "s#'SECURE_AUTH_KEY',  'put your unique phrase here'#'SECURE_AUTH_KEY',  '$(sudo openssl rand -base64 48)'#g" /var/www/$domain/wp-config.php
    sudo sed -i "s#'LOGGED_IN_KEY',    'put your unique phrase here'#'LOGGED_IN_KEY',    '$(sudo openssl rand -base64 48)'#g" /var/www/$domain/wp-config.php
    sudo sed -i "s#'NONCE_KEY',        'put your unique phrase here'#'NONCE_KEY',        '$(sudo openssl rand -base64 48)'#g" /var/www/$domain/wp-config.php
    sudo sed -i "s#'AUTH_SALT',        'put your unique phrase here'#'AUTH_SALT',        '$(sudo openssl rand -base64 48)'#g" /var/www/$domain/wp-config.php
    sudo sed -i "s#'SECURE_AUTH_SALT', 'put your unique phrase here'#'SECURE_AUTH_SALT', '$(sudo openssl rand -base64 48)'#g" /var/www/$domain/wp-config.php
    sudo sed -i "s#'LOGGED_IN_SALT',   'put your unique phrase here'#'LOGGED_IN_SALT',   '$(sudo openssl rand -base64 48)'#g" /var/www/$domain/wp-config.php
    sudo sed -i "s#'NONCE_SALT',       'put your unique phrase here'#'NONCE_SALT',       '$(sudo openssl rand -base64 48)'#g" /var/www/$domain/wp-config.php
    sudo sed -i "s+$table_prefix = 'wp_';+$table_prefix = 'qyc_';+" /var/www/$domain/wp-config.php

    sudo cp /etc/nginx/wp.tld /etc/nginx/sites-available/$domain
    sudo sed -i "s/dmn.tld/$domain/g"  /etc/nginx/sites-available/$domain
    sudo ln -s /etc/nginx/sites-available/$domain /etc/nginx/sites-enabled/
    sudo nginx -s reload
}

del_site() {
    sudo rm /etc/nginx/sites-enabled/$domain
    sudo rm /etc/nginx/sites-available/$domain
    sudo rm -r /var/www/$domain/*
    sudo rmdir /var/www/$domain
    echo "Files deleted"
    local dbnaming="qyc_$(echo ${domain} | sed "s+[^0-9A-Za-z]+_+g")"
    sudo mysql <<EOF
DROP USER ${dbnaming}@localhost;    
DROP DATABASE ${dbnaming};
EOF
    echo "Database deleted"
}

del_parser() {
    if [[ "$1" == *"."* ]]; then
        domain="$1"
        [[ "$1" == www.* ]] && domain=$(echo "$1" | cut -c 5-)
        [[ ! -d /var/www/$domain ]] && printf "\nSite does not exist." && print_help_del && exit
        shift
    else
        printf "\nInvalid domain: $1"
        print_help_del
        exit
    fi

    while [[ "$#" -gt 0 ]]; do
        case "$1" in
            -y|yes) proceed=yes ;;
        esac
    done

    if [[ "$proceed" == "yes" ]]; then
        del_site
    else
        echo -n "Do you want to delete the site {$domain}? [y/Y/yes]: "
        read consent
        if [[ "$consent" == "yes" || "$consent" == "y" || "$consent" == "Y" ]]; then
            del_site
        else
            echo "Not deleting site."
            exit
        fi
    fi
}

mk() {
    if [[ "$1" == "wp" ]]; then
        shift
        mk_wp "$@"
        else
        print_help_mk
    fi
}

ls() {
    printf "\n\n"
    printf "All sites available:\n\n"
    for name in /etc/nginx/sites-available/*
    do
        printf "    $(echo ${name} | sed "s+/etc/nginx/sites-available/++")\n"
    done
}

del() {
    if [[ "$1" == "" ]]; then
        print_help_del
        else
        del_parser "$@"
    fi
}

