#!/bin/bash

# Reference script to run all others, placed in /usr/bin/
# example: qyc mk wp domain.com

[[ $(whoami) != "root" ]] && echo "qycli has to be run as root, try 'sudo -i' or 'su -' to become root, then try again." && exit

# shellcheck disable=1091
source /var/qyc/qycli/bin/help
# shellcheck disable=1091
source /var/qyc/qycli/bin/stk
# shellcheck disable=1091
source /var/qyc/qycli/bin/fn

upd_qycli() {
    git -C /var/qyc/qycli reset --hard HEAD
    git -C /var/qyc/qycli pull
    git -C /var/qyc/qycli-plugin reset --hard HEAD
    git -C /var/qyc/qycli-plugin pull
    cp /var/qyc/qycli/bin/qyc /usr/bin/qyc
    chmod 755 /usr/bin/qyc
    chmod 755 /var/qyc/qycli/kernel
    chmod 755 /var/qyc/qycli/sec_firewall
}

if [[ $1 =~ (mk|make) ]]; then
    shift
    fn_mk "$@"
elif [[ $1 =~ (ls|list) ]]; then
    fn_ls
elif [[ $1 == "set" ]]; then
    shift
    fn_set "$@"
elif [[ $1 =~ (cl|clone) ]]; then
    shift
    fn_clone "$@"
elif [[ $1 =~ (del|delete) ]]; then
    shift
    fn_del "$@"
elif [[ $1 =~ (upd|update) ]]; then
    shift
    upd_qycli
    # shellcheck disable=1091
    source /var/qyc/qycli/bin/upd
    upd_parser "$@"
elif [[ $1 =~ (cnf|conf|configure) ]]; then
    shift
    fn_cnf "$@"
elif [[ $1 == "info" ]]; then
    shift
    fn_info "$@"
elif [[ $1 =~ (sec|security|firewall) ]]; then
    fn_sec
else
    print_help_qyc
fi
