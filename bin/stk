#!/bin/bash

# qycli stack install functions

source /opt/qycli/bin/upd

stk_utility_and_repos() {
    upd_apt
    # Utilities
    apt -y install ubuntu-standard ubuntu-server snap gnupg2 ca-certificates libpwquality-tools apt-transport-https #lsb-release
    DEBIAN_FRONTEND=noninteractive apt -y install postfix
    # redis repo
    add-apt-repository -y ppa:redislabs/redis
    # MariaDB repo
    curl -LsS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | bash -s -- --skip-maxscale
    if [[ -f /etc/apt/sources.list.d/*.old* ]]; then
        rm /etc/apt/sources.list.d/*.old* # Remove old mariadb.list
    fi
    addgroup qycli
    adduser --disabled-password --gecos "" --no-create-home --ingroup qycli qycli
}

stk_nginx_cert() {
    openssl genpkey -algorithm Ed25519 -out /etc/ssl/qycli.key
    openssl req -new -x509 -key /etc/ssl/qycli.key -out /etc/ssl/qycli.crt -days 36500 -subj "/C=AQ/ST=qycli/L=qycli/O=HOSTYON/OU=DevOps/CN=HOSTYON"
    chown qycli:qycli -R /etc/ssl/*
}

stk_nginx_install() {
    # Copying over default nginx conf and html files
    if [[ ! -d /etc/nginx ]] && [[ ! -d /usr/lib/nginx/modules ]]; then
        mkdir /etc/nginx
        mkdir -p /usr/lib/nginx/modules
    else
        printf "\nNGINX is already installed, start on a fresh system please.\n"
        exit
    fi

    mkdir -p /usr/local/nginx/html
    cp /snap/qycli-nginx/current/usr/local/nginx/html/ /usr/local/nginx/html/

    mkdir /var/log/nginx
    touch /var/log/nginx/error.log

    mkdir /var/lib/nginx

    mkdir /etc/nginx/sites-enabled
    mkdir /etc/nginx/sites-available
    mkdir /etc/nginx/common

    upd_get_snap_channel
    snap install qycli-nginx --$snap_channel
    upd_nginx

    stk_nginx_cert

    upd_nginx_conf
    upd_nginx_conf_renew_cf_ips

    mkdir -p /var/www
    chown qycli:qycli /var/www
    #chown qycli:qycli -R /var/www
	#chown root:root /var/www

    nginx -t && systemctl start nginx
}

stk_mariadb_install() {
    apt -y install mariadb-server
    upd_mariadb_conf
}

stk_php_install() {
    apt -y install imagemagick ghostscript libasn1-8-heimdal libbrotli1 libcurl4 libfftw3-double3 libfontconfig1 libfreetype6 libgomp1 libgssapi3-heimdal libhcrypto4-heimdal libheimbase1-heimdal libheimntlm0-heimdal libhx509-5-heimdal libicu66 libjpeg-turbo8 libkrb5-26-heimdal liblcms2-2 libldap-2.4-2 liblqr-1-0 libltdl7 libmagickcore-6.q16-6 libmagickwand-6.q16-6 libnghttp2-14 libonig5 libpng16-16 libpsl5 libroken18-heimdal librtmp1 libsasl2-2 libsodium23 libssh-4 libwebp6 libwind0-heimdal libx11-6 libxau6 libxcb1 libxdmcp6 libxext6 libxml2 libzip5

    php_version=$(grep "php_version" /var/opt/qycli/cnf | sed 's/php_version=//') # Reading the qycli.cnf file
    php_version_short=$(echo "$php_version" | tr -d ".")
    
    upd_get_snap_channel
    snap install qycli-php${php_version_short} --$snap_channel

    cp /snap/qycli-php$php_version_short/current/php/sbin/php-fpm /usr/sbin/php-fpm
    cp /snap/qycli-php$php_version_short/current/php/bin/* /usr/bin/

    mkdir /var/log/php/

    cp /opt/qycli/cnf/php/php-fpm.service /lib/systemd/system/php-fpm.service
}

stk_redis_install() {
    apt -y install redis
    usermod -g qycli redis
    upd_redis_conf
}

stk_wpcli_install() {
    wget -qO /usr/local/bin/wp-cli https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    chmod +x /usr/local/bin/wp-cli
    tee /usr/local/bin/wp >/dev/null <<'EOF'
runuser -u qycli -- wp-cli $@
EOF
    chmod +x /usr/local/bin/wp
}

stk_install() {
    stk_utility_and_repos; stk_nginx_install; stk_mariadb_install; stk_php_install; stk_redis_install; stk_wpcli_install;
    printf "\nqycli stack was installed.\n\n"
}