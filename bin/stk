#!/bin/bash

# qycli stack install functions

source /opt/qycli/bin/upd

stk_utility_and_repos() {
    upd_apt
    # Utilities
    apt -y install ubuntu-standard ubuntu-server snap gnupg2 ca-certificates libpwquality-tools apt-transport-https #lsb-release
    DEBIAN_FRONTEND=noninteractive apt -y install postfix
    # redis repo
    add-apt-repository -y ppa:redislabs/redis
    # MariaDB repo
    curl -LsS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | bash -s -- --skip-maxscale

    add-apt-repository -y ppa:maxmind/ppa

    addgroup qycli
    adduser --disabled-password --gecos "" --ingroup qycli qycli
}

stk_nginx_cert() {
    openssl genpkey -algorithm Ed25519 -out /etc/ssl/qycli.key
    openssl req -new -x509 -key /etc/ssl/qycli.key -out /etc/ssl/qycli.crt -days 36500 -subj "/C=AQ/ST=qycli/L=qycli/O=HOSTYON/OU=DevOps/CN=HOSTYON"
    chown qycli:qycli -R /etc/ssl/*
}

stk_nginx_install() {
    # Copying over default nginx conf and html files
    if [[ ! -d /etc/nginx ]] && [[ ! -d /usr/lib/nginx/modules ]]; then
        mkdir /etc/nginx
        mkdir -p /usr/lib/nginx/modules
    else
        printf "\nNGINX is already installed, start on a fresh system please.\n"
        exit
    fi

    apt -y install libfontconfig1 libfreetype6 libgd3 libgeoip1 libicu66 libjbig0 libjpeg-turbo8 libmaxminddb0 libperl5.30 libpng16-16 libtiff5 libwebp6 libx11-6 libxau6 libxcb1 libxdmcp6 libxml2 libxpm4 libxslt1.1

    upd_get_snap_channel
    snap install qycli-nginx --$snap_channel

    mkdir -p /usr/local/nginx/html
    mkdir /usr/local/nginx/modules
    cp -r /snap/qycli-nginx/current/usr/local/nginx/html/ /usr/local/nginx/

    mkdir /var/log/nginx
    touch /var/log/nginx/error.log
    chown -R qycli:qycli /var/log/nginx/

    mkdir /var/lib/nginx

    mkdir /etc/nginx/sites-enabled
    mkdir /etc/nginx/sites-available

    upd_nginx

    stk_nginx_cert

    upd_nginx_conf
    upd_nginx_conf_renew_cf_ips

    mkdir -p /var/www
    chown qycli:qycli /var/www
    #chown qycli:qycli -R /var/www
	#chown root:root /var/www

    nginx -t && systemctl start nginx
}

stk_mariadb_install() {
    apt -y install mariadb-server
    upd_mariadb_conf
}

stk_php_install() {
    apt -y install imagemagick ghostscript libasn1-8-heimdal libbrotli1 libcurl4 libfftw3-double3 libfontconfig1 libfreetype6 libgomp1 libgssapi3-heimdal libhcrypto4-heimdal libheimbase1-heimdal libheimntlm0-heimdal libhx509-5-heimdal libicu66 libjpeg-turbo8 libkrb5-26-heimdal liblcms2-2 libldap-2.4-2 liblqr-1-0 libltdl7 libmagickcore-6.q16-6 libmagickwand-6.q16-6 libnghttp2-14 libonig5 libpng16-16 libpsl5 libroken18-heimdal librtmp1 libsasl2-2 libsodium23 libssh-4 libwebp6 libwind0-heimdal libx11-6 libxau6 libxcb1 libxdmcp6 libxext6 libxml2 libzip5

    php_version=$(grep "php_version" /var/opt/qycli/cnf | sed 's/php_version=//') # Reading the qycli.cnf file
    php_version_short=$(echo "$php_version" | tr -d ".")

    mkdir /var/log/php/
    touch /var/log/php/php-fpm-error.log
    chown -R qycli:qycli /var/log/php/

    upd_php
    upd_php_conf
}

stk_redis_install() {
    apt -y install redis
    usermod -g qycli redis
    
    upd_redis_conf
    upd_redis_service
}

stk_wpcli_install() {
    wget -qO /usr/local/bin/wp-cli https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    chmod +x /usr/local/bin/wp-cli
    tee /usr/local/bin/wp >/dev/null <<'EOF'
runuser -u qycli -- wp-cli $@
EOF
    chmod +x /usr/local/bin/wp
    wp package install aaemnnosttv/wp-cli-login-command
}

stk_composer_install() {
    EXPECTED_CHECKSUM="$(php -r 'copy("https://composer.github.io/installer.sig", "php://stdout");')"
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    ACTUAL_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"

    if [ "$EXPECTED_CHECKSUM" != "$ACTUAL_CHECKSUM" ]
    then
        >&2 echo 'ERROR: Invalid installer checksum'
        rm composer-setup.php
        exit 1
    fi

    php composer-setup.php --quiet --filename=composer-binary --install-dir=/usr/local/bin/
    RESULT=$?
    rm composer-setup.php
    exit $RESULT

    tee /usr/local/bin/composer >/dev/null <<'EOF'
runuser -u qycli -- composer-binary --working-dir=/var/www/ $@
EOF
    chmod +x /usr/local/bin/composer
}

stk_pma_install() {
    composer create-project phpmyadmin/phpmyadmin /var/www/pma/htdocs
    cp /var/www/pma/htdocs/config.sample.inc.php /var/www/pma/htdocs/config.inc.php
    sed "s+\['host'\] = 'localhost'+\['socket'\] = '/run/mysqld/mysqld.sock'+" -i /var/www/pma/htdocs/config.inc.php
    
    cp /etc/nginx/ /etc/nginx/sites-available/pma
    sed -i "s/dmn.tld/pma/g" /etc/nginx/sites-available/pma
    mkdir /var/www/pma/nginx-conf
    tee /var/www/pma/nginx-conf/server-names.conf >/dev/null <<EOF
server_name
_
;
EOF
    ln -s /etc/nginx/sites-available/pma /etc/nginx/sites-enabled/
    chown qycli:qycli -R /var/www/pma/*
    nginx -s reload
}

stk_install() {
    stk_utility_and_repos; stk_nginx_install; stk_php_install; stk_mariadb_install; stk_redis_install; stk_wpcli_install; stk_composer_install;
    printf "\nqycli stack was installed.\n\n"
}