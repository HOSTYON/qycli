#!/bin/bash

# stack install functions

source /opt/qycli/bin/upd


utility_and_repos() {
    upd
    # Utilities
    apt -y install git curl wget gnupg2 ca-certificates lsb-release libpwquality-tools apt-transport-https
    DEBIAN_FRONTEND=noninteractive apt -y install postfix
    # redis repo
    add-apt-repository -y ppa:redislabs/redis
    # MariaDB repo
    curl -LsS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | bash -s -- --skip-maxscale
    if [[ -f /etc/apt/sources.list.d/*.old* ]]; then
        rm /etc/apt/sources.list.d/*.old* # Remove old mariadb.list
    fi
}

cert() {
    openssl req -new -x509 -nodes -days 7300 -newkey rsa:2048 -keyout /etc/ssl/qycli.key -out /etc/ssl/qycli.crt \
    -subj "/ST=qycli/L=qycli/O=qycli/OU=qycli/CN=qycli"
    chown qycli-nginx:qycli-nginx -R /etc/ssl/*
}

stk_nginx_install() {
    # Copying over default nginx conf and html files
    if [[ ! -d /etc/nginx ]] && [[ ! -d /usr/lib/nginx/modules ]]; then
        mkdir /etc/nginx
        mkdir -p /usr/lib/nginx/modules
        upd_nginx_overwrite_from_snap
    else
        printf "\nNGINX is already installed, start on a fresh system please.\n"
        exit
    fi

    if [[ ! -d /usr/local/nginx/html ]]; then
        mkdir -p /usr/local/nginx/html
        cp /snap/qycli-nginx/current/usr/local/nginx/html/* /usr/local/nginx/html/
    fi

    if [[ ! -d /var/log/nginx ]]; then
        mkdir /var/log/nginx
        touch /var/log/nginx/error.log
    fi

    if [[ ! -d /var/lib/nginx ]]; then
        mkdir /var/lib/nginx
    fi

    [[ ! -d /etc/nginx/sites-enabled ]] && mkdir /etc/nginx/sites-enabled
    [[ ! -d /etc/nginx/sites-available ]] && mkdir /etc/nginx/sites-available
    [[ ! -d /etc/nginx/common ]] && mkdir /etc/nginx/common

    cp /snap/qycli-nginx/current/usr/local/nginx/sbin/nginx /usr/sbin/nginx

    upd_nginx_conf

    if [[ ! -f /etc/ssl/qycli.key ]]; then
        cert
    fi

    chown qycli-nginx:qycli-nginx -R /var/www
	chown root:root /var/www
    nginx -t && systemctl restart ngin
}

stk_mariadb_install() {
    apt -y install mariadb-server
    upd_mariadb_conf
    systemctl restart mysql
}

stk_php_install() {
    apt -y install php${phpv}-bcmath php${phpv}-common php${phpv}-curl php${phpv}-fpm php${phpv}-gd php${phpv}-imagick \
    php${phpv}-mbstring php${phpv}-mysql php${ver}-redis php${phpv}-soap php${phpv}-xml php${phpv}-zip
    upd_php_conf
    systemctl restart php${phpv}-fpm
}

stk_redis_conf() {
    sed -i 's+port 6379+port 0+g' /etc/redis/redis.conf
    sed -i 's+tcp-backlog 511+# tcp-backlog 511+g' /etc/redis/redis.conf
    sed -i 's+# unixsocket /var/run/redis/redis-server.sock+unixsocket /run/redis/redis-server.sock+g' /etc/redis/redis.conf
    sed -i 's+# unixsocketperm 700+unixsocketperm 775+g' /etc/redis/redis.conf
    sed -i 's+*appendfsync everysec+# appendfsync everysec+g' /etc/redis/redis.conf
    sed -i 's+# appendfsync no+appendfsync no+g' /etc/redis/redis.conf
    sed -i 's+no-appendfsync-on-rewrite no+no-appendfsync-on-rewrite yes+g' /etc/redis/redis.conf
    local redismem=$((($(grep MemTotal /proc/meminfo | cut -f 2 -d ':' | tr -d ' ' | cut -f 1 -d 'k')/100000)*20)) # 20% of all memory in MB
    sed -i "s+# maxmemory <bytes>+maxmemory ${redismem}mb+g" /etc/redis/redis.conf
    sed -i 's+# maxmemory-policy noeviction+maxmemory-policy allkeys-lfu+g' /etc/redis/redis.conf
    sed -i 's+save 900 1+save 1800 1+g' /etc/redis/redis.conf
    sed -i 's+save 300 10+save 600 10+g' /etc/redis/redis.conf
}

stk_redis() {
    apt -y install redis
    usermod -g www-data redis
    stk_redis_conf
    systemctl restart redis-server
}

stk_wpcli() {
    wget -qO /usr/local/bin/wp-cli https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    chmod +x /usr/local/bin/wp-cli
    tee /usr/local/bin/wp >/dev/null <<'EOF'
runuser -u www-data -- wp-cli $@
EOF
    chmod +x /usr/local/bin/wp
}

stk_www_folder() {
    mkdir -p /var/www
    chown qycli-nginx:qycli-nginx /var/www
}

stk_wp() {
    phpv=$(grep "PHP Version:" /etc/qycli/qycli.cnf | sed 's/^.*: //') # Reading the qycli.cnf file
    utility_and_repos; stk_nginx; stk_mariadb; stk_php; stk_redis; stk_wpcli; stk_www_folder
    printf "\nqycli stack was installed.\n\n"
}